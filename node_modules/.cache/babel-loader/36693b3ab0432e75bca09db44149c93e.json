{"ast":null,"code":"var _jsxFileName = \"/home/ericko/Plocha/Projekty/fliks/src/Components/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from \"react\";\nimport axios from '../axios';\nimport \"../css/Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title,\n    fetchUrl,\n    isLargedRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); // console.log(request);\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData(); // prazdne [], spusti sa raz a druhy krat uz nenacita nove\n  }, [fetchUrl]); //console.table(movies);\n\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `row-posters {$isLargeRow && \"row-poster-large\"}`,\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row-poster\",\n        src: `${imgUrl}${isLargedRow ? movie.poster_path : movie.backdrop_path}` // url obrazka + path z api\n        ,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/home/ericko/Plocha/Projekty/fliks/src/Components/Row.js"],"names":["React","Component","useState","useEffect","axios","imgUrl","Row","title","fetchUrl","isLargedRow","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,gBAAP;;AAEA,MAAMC,MAAM,GAAG,sCAAf;;AAEA,SAASC,GAAT,OAAgD;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAkC;AAE5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeS,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB,CADsB,CAEvB;;AACCG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS,GAPG,CAQZ;AACH,GATQ,EASN,CAACJ,QAAD,CATM,CAAT,CAJ4C,CAe5C;;AACES,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAGF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,sBAAMH,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAG,iDAAjB;AAAA,gBACKG,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACb;AAEI,QAAA,SAAS,EAAC,YAFd;AAGI,QAAA,GAAG,EAAG,GAAEf,MAAO,GAAEI,WAAW,GAAGW,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EAH3E,CAG+E;AAH/E;AAII,QAAA,GAAG,EAAEF,KAAK,CAACG;AAJf,SACSH,KAAK,CAACI,EADf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GApCQlB,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport axios from '../axios';\nimport \"../css/Row.css\";\n\nconst imgUrl = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row ({ title, fetchUrl, isLargedRow }) {\n    \n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n           // console.log(request);\n            setMovies(request.data.results)\n            return request;\n        }\n        fetchData();\n        // prazdne [], spusti sa raz a druhy krat uz nenacita nove\n    }, [fetchUrl]);\n\n    //console.table(movies);\n      console.log(movies);\n\n\n    return (\n        <div className=\"row\">\n            <h2> {title} </h2>\n\n            <div className={`row-posters {$isLargeRow && \"row-poster-large\"}`}> \n                {movies.map(movie => (\n                    <img\n                        key={movie.id}\n                        className=\"row-poster\"\n                        src={`${imgUrl}${isLargedRow ? movie.poster_path : movie.backdrop_path}`}  // url obrazka + path z api\n                        alt={movie.name} \n                    />\n                ))}\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}